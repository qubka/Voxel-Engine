cmake_minimum_required(VERSION 3.20)
project(Vox)
cmake_policy(SET CMP0012 NEW)

set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_EXE_LINKER_FLAGS "-static")

set(CMAKE_THREAD_LIBS_INIT "-lpthread")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
set(CMAKE_HAVE_THREADS_LIBRARY 1)
set(CMAKE_USE_WIN32_THREADS_INIT 0)
set(CMAKE_USE_PTHREADS_INIT 1)
set(THREADS_PREFER_PTHREAD_FLAG ON)

set(Boost_USE_STATIC_LIBS ON)
set(Boost_USE_MULTITHREADED ON)
set(Boost_USE_STATIC_RUNTIME OFF)

add_compile_definitions(RAPIDJSON_HAS_STDSTRING=1)

find_package(Boost REQUIRED COMPONENTS log REQUIRED)
find_package(OpenGL REQUIRED)
find_package(glfw3 REQUIRED)
find_package(GLEW REQUIRED)
#find_package(GLUT REQUIRED)
find_package(assimp REQUIRED)
find_package(RapidJSON REQUIRED)
#find_package(PROJ4 REQUIRED)
#find_package(spdlog REQUIRED)
find_package(Freetype REQUIRED)

add_subdirectory(lib/glm)
add_subdirectory(lib/entt)
add_subdirectory(lib/delaunator)

file(GLOB_RECURSE SRC_SOURCES src/*.cpp)
file(GLOB_RECURSE SRC_HEADERS src/*.h )
set(HEADER_FILES pch.h)

add_executable(${PROJECT_NAME} ${SRC_SOURCES} ${SRC_HEADERS} ${HEADER_FILES})

target_include_directories(${PROJECT_NAME} PUBLIC ${Boost_INCLUDE_DIRS})
target_include_directories(${PROJECT_NAME} PUBLIC ${OPENGL_INCLUDE_DIR})
target_include_directories(${PROJECT_NAME} PUBLIC ${GLEW_INCLUDE_DIR})
target_include_directories(${PROJECT_NAME} PUBLIC ${FREEGLUT_INCLUDE_DIR})
target_include_directories(${PROJECT_NAME} PUBLIC ${RapidJSON_DIR})
#target_include_directories(${PROJECT_NAME} PUBLIC ${PROJ4_INCLUDE_DIRS})
target_include_directories(${PROJECT_NAME} PUBLIC ${FREETYPE_INCLUDE_DIRS})
target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/lib/glm)
target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/lib/stb)
target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/lib/entt/src)
target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/lib/delaunator/include)

target_precompile_headers(${PROJECT_NAME} PRIVATE ${HEADER_FILES})

#link_libraries("-static")
target_link_libraries(${PROJECT_NAME} PRIVATE OpenGL::GL)
target_link_libraries(${PROJECT_NAME} PRIVATE OpenGL::GLU)
target_link_libraries(${PROJECT_NAME} PRIVATE GLEW::GLEW)
#target_link_libraries(${PROJECT_NAME} PRIVATE GLUT::GLUT)
target_link_libraries(${PROJECT_NAME} PRIVATE glfw)
target_link_libraries(${PROJECT_NAME} PRIVATE assimp::assimp)
#target_link_libraries(${PROJECT_NAME} PRIVATE spdlog::spdlog)
#target_link_libraries(${PROJECT_NAME} PRIVATE PROJ4::proj)
target_link_libraries(${PROJECT_NAME} PRIVATE Boost::log)
target_link_libraries(${PROJECT_NAME} PRIVATE Freetype::Freetype)
